function e(e,t,r,n){Object.defineProperty(e,t,{get:r,set:n,enumerable:!0,configurable:!0})}e(module.exports,"bool",(()=>n)),e(module.exports,"int",(()=>s)),e(module.exports,"float",(()=>o)),e(module.exports,"string",(()=>i)),e(module.exports,"id",(()=>a)),e(module.exports,"array",(()=>u)),e(module.exports,"type",(()=>d)),e(module.exports,"resolver",(()=>p)),e(module.exports,"schema",(()=>_));class t{constructor(){}_render(){throw"not implemented"}_body(){throw"not implemented"}_params(){return""}_reset(){}docstring(e){return this._docstring=e,this}}class r extends t{constructor(e){super(),this.gql=e}_render(){return this.gql}_body(){return""}required(){if(this.gql.endsWith("!"))throw"Already non-nullable";return new r(this.gql+"!")}}const n=new r("Boolean"),s=new r("Int"),o=new r("Float"),i=new r("String"),a=new r("ID");class h extends r{constructor(e,t){super(e),this.inner=t}_body(){return this.inner._body()}_reset(){this.inner._reset()}}const u=e=>new h(`[${e._render()}]`,e);class c extends t{constructor(e,t){super(),this.name=e,this.shape=t,this.written=!1}_render(){return this.name}_body(){return this.written?"":(this.written=!0,`${this._docstring?`"""\n${this._docstring}\n"""\n`:""}type ${this.name} {\n${e=Object.entries(this.shape).map((([e,t])=>`${t._docstring?`"""\n${t._docstring}\n"""\n`:""}${e}${t._params()}: ${t._render()}`)).join(",\n"),e.split("\n").map((e=>"  "+e)).join("\n")}\n}\n`);var e}_reset(){this.written=!1,Object.values(this.shape).forEach((e=>e._reset()))}renderSchema(){return this._body()+"\n\n"+Object.values(this.shape).map((e=>e._body())).join("\n")}toGraphQL(){return this._reset(),this.renderSchema().split("\n").filter((e=>!!e)).join("\n").replace(/}\n/g,"}\n\n")+"\n"}}const d=(e,t)=>new c(e,t);class l extends t{constructor(e,t){super(),this.args=e,this.returns=t}_body(){return Object.values(this.args).map((e=>e._body())).join("\n")}_render(){return this.returns._render()}_params(){return`(${Object.entries(this.args).map((([e,t])=>`${e}: ${t._render()}`)).join(", ")})`}_reset(){Object.values(this.args).forEach((e=>e._reset()))}}const p=(e,t)=>new l(e,t);class m extends c{constructor(e,t){super("Schema",{Query:e.shape,Mutation:t.shape}),this.queries=e,this.mutations=t}toGraphQL(){return this.queries._reset(),this.mutations._reset(),`${this.queries.renderSchema()}\n\n${this.mutations.renderSchema()}`.split("\n").filter((e=>!!e)).join("\n").replace(/}\n/g,"}\n\n")+"\n"}}const _=(e,t)=>new m(d("Query",e),d("Mutation",t)),b=d("Book",{title:i,author:i,year:s.docstring("Year of first publication"),rating:o.docstring("User-given rating")}).docstring("Information about a book");console.log(_({books:u(b).docstring("A list of available books")},{createBook:p({book:b},n).docstring("Add a new book to the database")}).toGraphQL());